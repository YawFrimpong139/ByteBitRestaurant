spring:
  application:
    name: restaurant-service
  cloud:
    loadbalancer:
      retry:
        enabled: true
  cache:
    type: redis
    redis:
      time-to-live: 60000
  main:
    allow-bean-definition-overriding: true
  data:
    redis:
      host: localhost
      port: 6379
  datasource:
    url: jdbc:postgresql://localhost:5433/restaurantdb
    username: postgres
    password: zealow139
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 30000
      max-lifetime: 120000
      connection-timeout: 10000
      pool-name: ByteBitesPool
      leak-detection-threshold: 5000
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        jdbc:
          lob:
            non_contextual_creation: true
          batch_size: 25
          order_inserts: true
          order_updates: true
        cache:
          use_second_level_cache: true
          region.factory_class: org.hibernate.cache.jcache.JCacheRegionFactory
          use_query_cache: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://auth-service/auth/realms/bytebites
          jwk-set-uri: http://auth-service/auth/realms/bytebites/protocol/openid-connect/certs
management:
  endpoints:
    web:
      exposure:
        include: health, info,metrics, prometheus
  endpoint:
    health:
      show-details: always
  prometheus:
    metrics:
      export:
        enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

logging:
  level:
    root: INFO
    org.codewithzea: DEBUG
    org.springframework.web: WARN
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.security: WARN

  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

  file:
    name: logs/${spring.application.name}.log


  logback:
    rollingpolicy:
      max-file-size: 10MB
      max-history: 7
      total-size-cap: 100MB


  # Logstash JSON logging configuration
  logstash:
    enabled: true
    encoder:
      custom-fields: '{"app":"${spring.application.name}","env":"${spring.profiles.active:local}"}'
      include-context: false
      time-zone: UTC

server:
  port: 8082

resilience4j:
  ratelimiter:
    instances:
      restaurantApi:
        limit-for-period: 100
        limit-refresh-period: 60s
        timeout-duration: 500ms

eureka:
  client:
    service-url:
      defaultZone: http://${EUREKA_USERNAME:admin}:${EUREKA_PASSWORD:zealow139}@localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
    healthcheck:
      enabled: true
  instance:
    prefer-ip-address: true
